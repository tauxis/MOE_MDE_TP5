package Tauxis.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAddition = createDescriptorForAddition();
  /*package*/ final ConceptDescriptor myConceptChaine = createDescriptorForChaine();
  /*package*/ final ConceptDescriptor myConceptDeclarationVariable = createDescriptorForDeclarationVariable();
  /*package*/ final ConceptDescriptor myConceptEgalite = createDescriptorForEgalite();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptInstruction = createDescriptorForInstruction();
  /*package*/ final ConceptDescriptor myConceptLigneVide = createDescriptorForLigneVide();
  /*package*/ final ConceptDescriptor myConceptMultiplication = createDescriptorForMultiplication();
  /*package*/ final ConceptDescriptor myConceptNombre = createDescriptorForNombre();
  /*package*/ final ConceptDescriptor myConceptOperationBinaire = createDescriptorForOperationBinaire();
  /*package*/ final ConceptDescriptor myConceptProgramme = createDescriptorForProgramme();
  /*package*/ final ConceptDescriptor myConceptReferenceVariable = createDescriptorForReferenceVariable();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAddition, myConceptChaine, myConceptDeclarationVariable, myConceptEgalite, myConceptExpression, myConceptInstruction, myConceptLigneVide, myConceptMultiplication, myConceptNombre, myConceptOperationBinaire, myConceptProgramme, myConceptReferenceVariable);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Addition:
        return myConceptAddition;
      case LanguageConceptSwitch.Chaine:
        return myConceptChaine;
      case LanguageConceptSwitch.DeclarationVariable:
        return myConceptDeclarationVariable;
      case LanguageConceptSwitch.Egalite:
        return myConceptEgalite;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.Instruction:
        return myConceptInstruction;
      case LanguageConceptSwitch.LigneVide:
        return myConceptLigneVide;
      case LanguageConceptSwitch.Multiplication:
        return myConceptMultiplication;
      case LanguageConceptSwitch.Nombre:
        return myConceptNombre;
      case LanguageConceptSwitch.OperationBinaire:
        return myConceptOperationBinaire;
      case LanguageConceptSwitch.Programme:
        return myConceptProgramme;
      case LanguageConceptSwitch.ReferenceVariable:
        return myConceptReferenceVariable;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAddition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Addition", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033bbL);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.OperationBinaire", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033baL);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332371387");
    b.version(2);
    b.alias("+");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChaine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Chaine", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd14bebL);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.Expression", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9a7aL);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332443115");
    b.version(2);
    b.property("valeur", 0x1c58edc83fd14becL).type(PrimitiveTypeId.STRING).origin("2042643875332443116").done();
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDeclarationVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "DeclarationVariable", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9266L);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.Instruction", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9265L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332330086");
    b.version(2);
    b.aggregate("expression", 0x1c58edc83fcf9a7dL).target(0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9a7aL).optional(false).ordered(true).multiple(false).origin("2042643875332332157").done();
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEgalite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Egalite", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033beL);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.OperationBinaire", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033baL);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332371390");
    b.version(2);
    b.alias("==");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Expression", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9a7aL);
    b.class_(false, true, false);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332332154");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstruction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Instruction", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9265L);
    b.class_(false, true, false);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332330085");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLigneVide() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "LigneVide", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x4027de68327a3d57L);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.Instruction", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9265L);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/4622908081623940439");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiplication() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Multiplication", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033bcL);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.OperationBinaire", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033baL);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332371388");
    b.version(2);
    b.alias("*");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNombre() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Nombre", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033b9L);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.Expression", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9a7aL);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332371385");
    b.version(2);
    b.property("valeur", 0x1c58edc83fd033bfL).type(PrimitiveTypeId.STRING).origin("2042643875332371391").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperationBinaire() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "OperationBinaire", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033baL);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.Expression", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9a7aL);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332371386");
    b.version(2);
    b.aggregate("gauche", 0x1c58edc83fd1cf79L).target(0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033b9L).optional(false).ordered(true).multiple(false).origin("2042643875332476793").done();
    b.aggregate("droite", 0x1c58edc83fd1cf7fL).target(0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd033b9L).optional(false).ordered(true).multiple(false).origin("2042643875332476799").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProgramme() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "Programme", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9267L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332330087");
    b.version(2);
    b.aggregate("instructions", 0x1c58edc83fcf926cL).target(0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9265L).optional(true).ordered(true).multiple(true).origin("2042643875332330092").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferenceVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Tauxis", "ReferenceVariable", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fd00cadL);
    b.class_(false, false, false);
    b.super_("Tauxis.structure.Expression", 0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9a7aL);
    b.origin("r:06bf96df-72b2-4481-a9e0-b58d20b168cc(Tauxis.structure)/2042643875332361389");
    b.version(2);
    b.associate("declarationvariable", 0x4027de68327c4d5fL).target(0xf6cd233ef2b447e9L, 0x92ff415cf49c3252L, 0x1c58edc83fcf9266L).optional(false).origin("4622908081624075615").done();
    return b.create();
  }
}
